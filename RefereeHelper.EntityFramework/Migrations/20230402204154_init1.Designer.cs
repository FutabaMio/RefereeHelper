// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RefereeHelper.EntityFramework;

#nullable disable

namespace RefereeHelper.EntityFramework.Migrations
{
    [DbContext(typeof(RefereeHelperDbContext))]
    [Migration("20230402204154_init1")]
    partial class init1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("RefereeHelper.Models.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Couch")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RegionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("RefereeHelper.Models.Competition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Judge")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Organizer")
                        .HasColumnType("TEXT");

                    b.Property<string>("Place")
                        .HasColumnType("TEXT");

                    b.Property<string>("Secretary")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TypeAge")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Competitions");
                });

            modelBuilder.Entity("RefereeHelper.Models.Discharge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Discharges");
                });

            modelBuilder.Entity("RefereeHelper.Models.Distance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Circles")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Height")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Length")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Distances");
                });

            modelBuilder.Entity("RefereeHelper.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DistanceId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("EndAge")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("StartAge")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DistanceId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("RefereeHelper.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BornDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ClubId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DischargeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecondName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.HasIndex("DischargeId");

                    b.HasIndex("GroupId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("RefereeHelper.Models.Partisipation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompetitionId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MemberId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompetitionId");

                    b.HasIndex("GroupId");

                    b.HasIndex("MemberId");

                    b.ToTable("Partisipations");
                });

            modelBuilder.Entity("RefereeHelper.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("СodeNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("RefereeHelper.Models.Start", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Chip")
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PartisipationId")
                        .HasColumnType("INTEGER");

                    b.Property<TimeOnly?>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TeamId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PartisipationId");

                    b.HasIndex("TeamId");

                    b.ToTable("Starts");
                });

            modelBuilder.Entity("RefereeHelper.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("RefereeHelper.Models.Timing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Circle")
                        .HasColumnType("INTEGER");

                    b.Property<TimeOnly?>("CircleTime")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsFinish")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Place")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PlaceAbsolute")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("StartId")
                        .HasColumnType("INTEGER");

                    b.Property<TimeOnly?>("TimeFromStart")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly?>("TimeNow")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly?>("currentTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StartId");

                    b.ToTable("Timings");
                });

            modelBuilder.Entity("RefereeHelper.Models.Club", b =>
                {
                    b.HasOne("RefereeHelper.Models.Region", "Region")
                        .WithMany("Clubs")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("RefereeHelper.Models.Group", b =>
                {
                    b.HasOne("RefereeHelper.Models.Distance", "Distance")
                        .WithMany("Groups")
                        .HasForeignKey("DistanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Distance");
                });

            modelBuilder.Entity("RefereeHelper.Models.Member", b =>
                {
                    b.HasOne("RefereeHelper.Models.Club", "Club")
                        .WithMany("members")
                        .HasForeignKey("ClubId");

                    b.HasOne("RefereeHelper.Models.Discharge", "Discharge")
                        .WithMany("Members")
                        .HasForeignKey("DischargeId");

                    b.HasOne("RefereeHelper.Models.Group", null)
                        .WithMany("Members")
                        .HasForeignKey("GroupId");

                    b.Navigation("Club");

                    b.Navigation("Discharge");
                });

            modelBuilder.Entity("RefereeHelper.Models.Partisipation", b =>
                {
                    b.HasOne("RefereeHelper.Models.Competition", "Competition")
                        .WithMany("Partisipations")
                        .HasForeignKey("CompetitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RefereeHelper.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("RefereeHelper.Models.Member", "Member")
                        .WithMany("Partisipations")
                        .HasForeignKey("MemberId");

                    b.Navigation("Competition");

                    b.Navigation("Group");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("RefereeHelper.Models.Start", b =>
                {
                    b.HasOne("RefereeHelper.Models.Partisipation", "Partisipation")
                        .WithMany("Starts")
                        .HasForeignKey("PartisipationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RefereeHelper.Models.Team", "Team")
                        .WithMany("Starts")
                        .HasForeignKey("TeamId");

                    b.Navigation("Partisipation");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("RefereeHelper.Models.Timing", b =>
                {
                    b.HasOne("RefereeHelper.Models.Start", "Start")
                        .WithMany("Timings")
                        .HasForeignKey("StartId");

                    b.Navigation("Start");
                });

            modelBuilder.Entity("RefereeHelper.Models.Club", b =>
                {
                    b.Navigation("members");
                });

            modelBuilder.Entity("RefereeHelper.Models.Competition", b =>
                {
                    b.Navigation("Partisipations");
                });

            modelBuilder.Entity("RefereeHelper.Models.Discharge", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("RefereeHelper.Models.Distance", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("RefereeHelper.Models.Group", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("RefereeHelper.Models.Member", b =>
                {
                    b.Navigation("Partisipations");
                });

            modelBuilder.Entity("RefereeHelper.Models.Partisipation", b =>
                {
                    b.Navigation("Starts");
                });

            modelBuilder.Entity("RefereeHelper.Models.Region", b =>
                {
                    b.Navigation("Clubs");
                });

            modelBuilder.Entity("RefereeHelper.Models.Start", b =>
                {
                    b.Navigation("Timings");
                });

            modelBuilder.Entity("RefereeHelper.Models.Team", b =>
                {
                    b.Navigation("Starts");
                });
#pragma warning restore 612, 618
        }
    }
}
